extends /templates/base-flat

block page_nav
  include ./teacher-dashboard-nav.jade

block content
  - var classroom = view.classroom
  if classroom.loaded
    .container
      h3= classroom.get('name')
      a.edit-class-settings(data-i18n="TODO" data-classroom-id=classroom.id)
        | edit class settings
      h4= classroom.get('description')
      
      .classroom-info-row.row
        .classroom-details.col-md-3
          h4(data-i18n="TODO")
            | Class Overview
      
          .language
            span.spr(data-i18n="TODO")
              | Language:
            span= classroom.capitalLanguage
          
          .student-count
            span.spr(data-i18n="TODO")
              | Students:
            span= classroom.get('members').length
              
          .average-playtime
            span.spr(data-i18n="TODO")
              | Average level play time:
            span= view.averagePlaytime
              
          .total-playtime
            span.spr(data-i18n="TODO")
              | Total play time:
            span= view.totalPlaytime
               
          .average-complete
            span.spr(data-i18n="TODO")
              | Average levels completed:
            span= view.averageLevelsCompleted
              
          .total-complete
            span.spr(data-i18n="TODO")
              | Total levels completed:
            span= view.totalLevelsCompleted
              
          .concepts.semibold
          
        .completeness-info.col-md-4
          if view.earliestIncompleteLevel
            div(data-i18n="TODO")
              | Earliest incomplete level:
            +longLevelName(view.earliestIncompleteLevel)
            +inlineUserList(view.earliestIncompleteLevel.users)
            
          if view.latestCompleteLevel
            div(data-i18n="TODO")
              | Latest completed level:
            +longLevelName(view.latestCompleteLevel)
            +inlineUserList(view.latestCompleteLevel.users)
            
        .adding-students.col-md.4
          h4(data-i18n="TODO")
            | Adding students:
          +copyCodes
          +addStudentsButton
          
      ul.nav.nav-tabs(role="tablist")
        li.active
          a(href="#students-tab" data-toggle="tab")
            .text-center(data-i18n="TODO")
              | Students
        .tab-spacer
        li
          a(href="#course-progress-tab" data-toggle="tab")
            .text-center(data-i18n="TODO")
              | Level Progress
        .tab-filler
      
      .tab-content
        +studentsTab
        +courseProgressTab

mixin longLevelName(data)
  if data
    div.level-name
      span.spr Course
      span= data.courseNumber
      span.spr , Level
      span= data.levelNumber
      span.spr :
      span= data.levelName
          
mixin inlineUserList(users)
  if users
    ul.inline-student-list
      each student in users
        li
          a(href="TODO")
            = student.get('name')

mixin addStudentsButton
  .add-students.text-center
    a.add-students-button.btn.btn-lg.btn-primary(data-classroom-id=view.classroom.id)
      | Add Students Manually
        
mixin studentsTab
  #students-tab.tab-pane.active
    +bulkAssignControls
    table.students-table
      thead
        th.checkbox-col
          span Select All
          .checkbox-flat
            input(type='checkbox' id='checkbox-all-students')
            label.checkmark(for='checkbox-all-students')
        th.small
          span Sort by: 
          button.sort-button.sort-by-name
            | Name
          button.sort-button.sort-by-progress
            | Progress
      tbody
        each student in view.students.models
          +studentRow(student)
          
mixin studentRow(student)
  tr.alternating-background
    td.checkbox-col
      .checkbox-flat
        input(type='checkbox' id='checkbox-student-' + student.id)
        label.checkmark(for='checkbox-student-' + student.id)
    td.student-info-col
      .student-info
        div.student-name= student.get('name')
        div.student-email.small-details emailaddress@school.edu
    td.hidden
      a.edit-student-button(data-student-id=student.id)
        span.glyphicon.glyphicon-edit
        span(data-i18n="TODO") edit
    td.latest-level-col.small
      div
        i Latest completed:
      div
        +longLevelName(student.latestCompleteLevel)
    td
      if view.progressData
        each course, index in view.courses.models
          - var instance = view.courseInstances.getByCourseAndClassroom(course, classroom)
          if instance && instance.hasMember(student)
            - var progress = view.progressData.get({ classroom: view.classroom, course: course, user: student })
            +progressDot(progress, "CS" + (index+1))
      unless student.isEnrolled()
        +enrollStudentButton(student)
    td
      span.view-class-arrow.glyphicon.glyphicon-chevron-right

mixin enrollStudentButton(student)
  a.enroll-student-button.btn.btn-lg.btn-primary(data-classroom-id=view.classroom.id)
    | Enroll student
    
mixin courseProgressTab
  #course-progress-tab.tab-pane
    if view.progressData
      +courseOverview
      .student-levels-table
        each student in view.students.models
          +studentLevelsRow(student)
        
mixin courseOverview
  - var course = view.courses.models[0] // TODO: Wire this up to a dropdown
  - var campaign = view.campaigns.get(course.get('campaignID'))
  - var levels = campaign.getNonladderLevels().models
  .course-overview-row
    .course-overview-progress
      each level, index in levels
        - var progress = view.progressData.get({ classroom: view.classroom, course: course, level: level })
        +progressDot(progress, index+1)

mixin studentLevelsRow(student)
  .student-levels-row.alternating-background
    div.student-info
      div.student-name= student.get('name')
      div.student-email.small-details emailaddress@school.edu
    div.student-levels-progress
      - var course = view.courses.models[0] // TODO: Wire this up to a dropdown
      - var campaign = view.campaigns.get(course.get('campaignID'))
      - var levels = campaign.getNonladderLevels().models
      each level, index in levels
        - var progress = view.progressData.get({ classroom: view.classroom, course: course, level: level, user: student })
        +progressDot(progress, index+1)
        
      
    

mixin progressDot(progress, label)
  //- TODO: Refactor with TeacherClassesView jade
  //- TODO: Give classes abbreviations instead of using index?
  //- TODO: inefficient. Cache this in the view?
  - dotClass = progress.completed ? 'forest' : (progress.started ? 'gold' : '');
  .progress-dot(class=dotClass, data-html='true', data-title=view.progressDotTemplate(progressDotContext) data-toggle='tooltip')
    +progressDotLabel(label)

mixin progressDotLabel(label)
  .dot-label.text-center
    .dot-label-inner
      = label

mixin copyCodes
  div.copy-button-group.form-inline
    .form-group
      input.text-h4.semibold#join-code-input(value=view.classCode)
    button#copy-code-btn.form-control.btn.btn-lg.btn-secondary Copy Class Code
    div.text-center.small(data-i18n="TODO")
      | New students can enter this class code on their dashboard or visit codecombat.com/courses to join the class.
      
  div.copy-button-group.form-inline
    .form-group
      input.form-control.text-h4.semibold#join-url-input(value=view.joinURL)
    button#copy-url-btn.form-control.btn.btn-lg.btn-secondary Copy Class URL
    div.text-center.small(data-i18n="TODO")
      | New students can visit this URL while logged in to join the class.

mixin bulkAssignControls
  .bulk-assign-controls.form-inline
    span.small(data-i18n="TODO")
      | Bulk-assign:
    select.bulk-course-select.form-control
      each course in view.courses.models
        option(value=course.id)
          = course.get('name')
    button.btn.btn-primary-alt.assign-to-selected-students
      span(data-i18n="TODO")
        | Assign to Selected Students
    button.btn.btn-primary-alt.enroll-selected-students
      span(data-i18n="TODO")
        | Enroll Selected Students
